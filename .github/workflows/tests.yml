name: test
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches: [main, develop]
permissions:
  contents: write
jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      #----------------------------------------------------------
      #       checkout repo and set-up python
      #----------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      #----------------------------------------------------------
      #       install & configure poetry
      #----------------------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------------------
      #       install dependencies if cache does not exist
      #----------------------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --only lint
      #----------------------------------------------------------
      #       lint
      #----------------------------------------------------------
      - name: lint
        run: |
          source .venv/bin/activate
          ruff check
  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------------------
      #       checkout repo and set-up python
      #----------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      #----------------------------------------------------------
      #       install & configure poetry
      #----------------------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      #----------------------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------------------
      #       install dependencies if cache does not exist
      #----------------------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --only test
      #----------------------------------------------------------
      #       test with pytest
      #----------------------------------------------------------
      - name: tests
        run: |
          source .venv/bin/activate
          pytest tests/
